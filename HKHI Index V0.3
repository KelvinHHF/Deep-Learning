{"cells":[{"cell_type":"markdown","source":["\n","|Version|Date|Description|\n","|--|--|--|\n","|0.1|2024-11-29|Initial|\n","|0.2|2024-12-03|Updated the model parameter by increasing the no.of stack LSTM layer from 1 to 3|\n","|0.3|2024-12-04|Change the sequence of train_test_split and normalization flow"],"metadata":{"id":"RXxm_xUHy4ql"}},{"cell_type":"markdown","source":["Training Model\n","\n","Utilize the historical data from King's Park to train and evaluate the model. The sequence length is set to 7 days, meaning the past 7 days of data are used to predict the HKHI index for the next day.\n","\n","Fine Tunning Model\n","\n","Partition the full dataset by region. For each region, use only the most recent 7 days of data to fine-tune the model and predict the HKHI index for the following day."],"metadata":{"id":"QF3oMqbKMqqP"}},{"cell_type":"markdown","source":["Data Cleansing"],"metadata":{"id":"PmOfgKf-Ub53"}},{"cell_type":"code","execution_count":2,"metadata":{"id":"8r-THZuvGIpq","executionInfo":{"status":"ok","timestamp":1733243043676,"user_tz":-480,"elapsed":5229,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"outputs":[],"source":["# Import necessary libraries\n","import os\n","import torch\n","import torch.nn as nn\n","import numpy as np\n","import pandas as pd\n","from sklearn.preprocessing import MinMaxScaler\n","from torch.utils.data import DataLoader, TensorDataset\n","import matplotlib.pyplot as plt\n"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tn3rCb9klLg_","executionInfo":{"status":"ok","timestamp":1733243072365,"user_tz":-480,"elapsed":27962,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}},"outputId":"89b376af-0a35-4ce9-f242-f9f0db13a02f"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n"],"metadata":{"id":"kqzEBlcX8aQy","executionInfo":{"status":"ok","timestamp":1733243072366,"user_tz":-480,"elapsed":3,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["path = \"/content/drive/MyDrive/CUHK/STAT 6207 Deep Learning/Project/\""],"metadata":{"id":"dtPKkSih8eOg","executionInfo":{"status":"ok","timestamp":1733243072366,"user_tz":-480,"elapsed":3,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv(path+\"DAILY_FINAL.csv\")"],"metadata":{"id":"e0xL_AVN8pPM","executionInfo":{"status":"ok","timestamp":1733243888408,"user_tz":-480,"elapsed":451,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"fc4c2985-b09f-49dd-9483-0c87bcb907b1"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-43-6002d176b92d>:1: DtypeWarning: Columns (8) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(path+\"DAILY_FINAL.csv\")\n"]}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"cyxOAqxRQTT-","executionInfo":{"status":"ok","timestamp":1733243889837,"user_tz":-480,"elapsed":8,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}},"outputId":"815ea3b2-fd49-4be7-cdf0-7613d8681be0"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  WeatherStationName_en  Year  Month  Day  Value_Humidity  Value_Temperature  \\\n","0               Sha Tin  1984     10    2            76.0               27.5   \n","1               Sha Tin  1984     10    3            71.0               27.6   \n","2               Sha Tin  1984     10    4            73.0               26.9   \n","3               Sha Tin  1984     10    5            75.0               25.5   \n","4               Sha Tin  1984     10    7            71.0               24.4   \n","\n","   Value_Wind_Speed  Value_Wind_Direction Value_Heat_Index  \n","0               5.3                 110.0              NaN  \n","1               4.0                 240.0              NaN  \n","2               5.3                 230.0              NaN  \n","3               7.9                  30.0              NaN  \n","4               5.3                  40.0              NaN  "],"text/html":["\n","  <div id=\"df-f96d9d1f-3a48-4bbf-91bd-19a47ad138dd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>WeatherStationName_en</th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>Day</th>\n","      <th>Value_Humidity</th>\n","      <th>Value_Temperature</th>\n","      <th>Value_Wind_Speed</th>\n","      <th>Value_Wind_Direction</th>\n","      <th>Value_Heat_Index</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Sha Tin</td>\n","      <td>1984</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>76.0</td>\n","      <td>27.5</td>\n","      <td>5.3</td>\n","      <td>110.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Sha Tin</td>\n","      <td>1984</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>71.0</td>\n","      <td>27.6</td>\n","      <td>4.0</td>\n","      <td>240.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Sha Tin</td>\n","      <td>1984</td>\n","      <td>10</td>\n","      <td>4</td>\n","      <td>73.0</td>\n","      <td>26.9</td>\n","      <td>5.3</td>\n","      <td>230.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Sha Tin</td>\n","      <td>1984</td>\n","      <td>10</td>\n","      <td>5</td>\n","      <td>75.0</td>\n","      <td>25.5</td>\n","      <td>7.9</td>\n","      <td>30.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Sha Tin</td>\n","      <td>1984</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>71.0</td>\n","      <td>24.4</td>\n","      <td>5.3</td>\n","      <td>40.0</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f96d9d1f-3a48-4bbf-91bd-19a47ad138dd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f96d9d1f-3a48-4bbf-91bd-19a47ad138dd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f96d9d1f-3a48-4bbf-91bd-19a47ad138dd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-69059f51-4774-4514-9665-1edce27f7437\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-69059f51-4774-4514-9665-1edce27f7437')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-69059f51-4774-4514-9665-1edce27f7437 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["df['Date'] = pd.to_datetime(df[['Year', 'Month', 'Day']]).dt.date"],"metadata":{"id":"D-bpJota_vj4","executionInfo":{"status":"ok","timestamp":1733243891564,"user_tz":-480,"elapsed":5,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["df = df.drop(['Year', 'Month', 'Day'], axis=1)\n"],"metadata":{"id":"2zctN05j_-Ku","executionInfo":{"status":"ok","timestamp":1733243893899,"user_tz":-480,"elapsed":2,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["df.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"_KwrWCDTSw4v","executionInfo":{"status":"ok","timestamp":1733243906347,"user_tz":-480,"elapsed":456,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}},"outputId":"d1f194e8-07f7-4f34-9b71-0ba65e683084"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       WeatherStationName_en  Value_Humidity  Value_Temperature  \\\n","143623         Tseung Kwan O            59.0               26.2   \n","143624              Tuen Mun            52.0               26.1   \n","143625         Waglan Island            61.0               26.2   \n","143626          Wetland Park            61.0               26.2   \n","143627        Wong Chuk Hang            53.0               27.3   \n","\n","        Value_Wind_Speed  Value_Wind_Direction Value_Heat_Index        Date  \n","143623               7.4                 360.0              NaN  2024-10-31  \n","143624               9.5                 350.0              NaN  2024-10-31  \n","143625              23.1                 340.0              NaN  2024-10-31  \n","143626               3.2                 340.0              NaN  2024-10-31  \n","143627               9.5                 320.0              NaN  2024-10-31  "],"text/html":["\n","  <div id=\"df-68099f31-d18f-407d-8385-e9fb8a2d81b1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>WeatherStationName_en</th>\n","      <th>Value_Humidity</th>\n","      <th>Value_Temperature</th>\n","      <th>Value_Wind_Speed</th>\n","      <th>Value_Wind_Direction</th>\n","      <th>Value_Heat_Index</th>\n","      <th>Date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>143623</th>\n","      <td>Tseung Kwan O</td>\n","      <td>59.0</td>\n","      <td>26.2</td>\n","      <td>7.4</td>\n","      <td>360.0</td>\n","      <td>NaN</td>\n","      <td>2024-10-31</td>\n","    </tr>\n","    <tr>\n","      <th>143624</th>\n","      <td>Tuen Mun</td>\n","      <td>52.0</td>\n","      <td>26.1</td>\n","      <td>9.5</td>\n","      <td>350.0</td>\n","      <td>NaN</td>\n","      <td>2024-10-31</td>\n","    </tr>\n","    <tr>\n","      <th>143625</th>\n","      <td>Waglan Island</td>\n","      <td>61.0</td>\n","      <td>26.2</td>\n","      <td>23.1</td>\n","      <td>340.0</td>\n","      <td>NaN</td>\n","      <td>2024-10-31</td>\n","    </tr>\n","    <tr>\n","      <th>143626</th>\n","      <td>Wetland Park</td>\n","      <td>61.0</td>\n","      <td>26.2</td>\n","      <td>3.2</td>\n","      <td>340.0</td>\n","      <td>NaN</td>\n","      <td>2024-10-31</td>\n","    </tr>\n","    <tr>\n","      <th>143627</th>\n","      <td>Wong Chuk Hang</td>\n","      <td>53.0</td>\n","      <td>27.3</td>\n","      <td>9.5</td>\n","      <td>320.0</td>\n","      <td>NaN</td>\n","      <td>2024-10-31</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-68099f31-d18f-407d-8385-e9fb8a2d81b1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-68099f31-d18f-407d-8385-e9fb8a2d81b1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-68099f31-d18f-407d-8385-e9fb8a2d81b1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cb64f701-8a09-4466-8d5e-3a9ee38f7aaf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cb64f701-8a09-4466-8d5e-3a9ee38f7aaf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cb64f701-8a09-4466-8d5e-3a9ee38f7aaf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"0"}},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["kings_park_data = df[(df['WeatherStationName_en'] == \"King's Park\") & (df['Value_Heat_Index'].notna())]"],"metadata":{"id":"hM6K78YF80vI","executionInfo":{"status":"ok","timestamp":1733243075692,"user_tz":-480,"elapsed":20,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["kings_park_data = kings_park_data.sort_values(by = 'Date').dropna()"],"metadata":{"id":"NeYBxku29LiL","executionInfo":{"status":"ok","timestamp":1733243075693,"user_tz":-480,"elapsed":20,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["features = ['Value_Humidity','Value_Temperature', 'Value_Wind_Speed', 'Value_Wind_Direction']\n","target = 'Value_Heat_Index'"],"metadata":{"id":"jdokERmjAl2V","executionInfo":{"status":"ok","timestamp":1733243075693,"user_tz":-480,"elapsed":20,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["# Convert 'Value_Heat_Index' to numeric, coercing invalid strings to NaN\n","for feature in features:\n","  kings_park_data[feature] = pd.to_numeric(kings_park_data[feature], errors='coerce')\n"],"metadata":{"id":"kLJK7NOESMXb","executionInfo":{"status":"ok","timestamp":1733243075693,"user_tz":-480,"elapsed":20,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["kings_park_data['Value_Heat_Index'] = pd.to_numeric(kings_park_data['Value_Heat_Index'], errors='coerce')\n"],"metadata":{"id":"ddd8pro6SYvM","executionInfo":{"status":"ok","timestamp":1733243075693,"user_tz":-480,"elapsed":20,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["kings_park_data.dropna(inplace=True)"],"metadata":{"id":"687TgjBtS1S8","executionInfo":{"status":"ok","timestamp":1733243075693,"user_tz":-480,"elapsed":19,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["X = kings_park_data[features].values\n","y = kings_park_data[target].values"],"metadata":{"id":"_64LhinZA2Aj","executionInfo":{"status":"ok","timestamp":1733243075693,"user_tz":-480,"elapsed":19,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["kings_park_data.query(\"Value_Heat_Index.isna()\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"7g_ybpN4BgIY","executionInfo":{"status":"ok","timestamp":1733243075693,"user_tz":-480,"elapsed":19,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}},"outputId":"7227472d-aac2-4bf5-fe76-7865e6d9e1f8"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [WeatherStationName_en, Value_Humidity, Value_Temperature, Value_Wind_Speed, Value_Wind_Direction, Value_Heat_Index, Date]\n","Index: []"],"text/html":["\n","  <div id=\"df-382785d8-d184-41ec-adf7-5e22db373106\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>WeatherStationName_en</th>\n","      <th>Value_Humidity</th>\n","      <th>Value_Temperature</th>\n","      <th>Value_Wind_Speed</th>\n","      <th>Value_Wind_Direction</th>\n","      <th>Value_Heat_Index</th>\n","      <th>Date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-382785d8-d184-41ec-adf7-5e22db373106')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-382785d8-d184-41ec-adf7-5e22db373106 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-382785d8-d184-41ec-adf7-5e22db373106');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"Out of range float values are not JSON compliant: nan"}},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":[" Train-test split"],"metadata":{"id":"FnF4-4kNVAnp"}},{"cell_type":"code","source":["# Train-test split BEFORE normalization\n","train_size = int(len(kings_park_data) * 0.8)\n","train_data = kings_park_data[:train_size]\n","test_data = kings_park_data[train_size:]\n","\n"],"metadata":{"id":"kQBDAeHe4Wa5","executionInfo":{"status":"ok","timestamp":1733243117530,"user_tz":-480,"elapsed":465,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":20,"outputs":[]},{"cell_type":"markdown","source":["Normalization"],"metadata":{"id":"NoFh_SzzUjdz"}},{"cell_type":"code","source":["# Normalize features and target using only the training data\n","\n","scaler_X = MinMaxScaler()\n","scaler_y = MinMaxScaler()"],"metadata":{"id":"Ul38e4iiA3n2","executionInfo":{"status":"ok","timestamp":1733243129964,"user_tz":-480,"elapsed":1009,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["# Fit scalers on training data ONLY\n","scaler_X.fit(train_data[features].values)    # Fit only on training features\n","scaler_y.fit(train_data[[target]].values)   # Fit only on training target\n","\n","# Transform training and testing data using the same scaler\n","X_train_scaled = scaler_X.transform(train_data[features].values)\n","y_train_scaled = scaler_y.transform(train_data[[target]].values)\n","\n","X_test_scaled = scaler_X.transform(test_data[features].values)\n","y_test_scaled = scaler_y.transform(test_data[[target]].values)"],"metadata":{"id":"FD-8HDvLA4-9","executionInfo":{"status":"ok","timestamp":1733243132220,"user_tz":-480,"elapsed":6,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["# Create sequences for LSTM\n","def create_sequences(X, y, seq_length=7):\n","    X_seq, y_seq = [], []\n","    for i in range(len(X) - seq_length):\n","        X_seq.append(X[i:i+seq_length])\n","        y_seq.append(y[i+seq_length])\n","    return np.array(X_seq), np.array(y_seq)"],"metadata":{"id":"T9imcRr-BDgG","executionInfo":{"status":"ok","timestamp":1733243134338,"user_tz":-480,"elapsed":5,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["seq_length = 7\n","# Create sequences for training and testing data\n","X_train_seq, y_train_seq = create_sequences(X_train_scaled, y_train_scaled, seq_length)\n","X_test_seq, y_test_seq = create_sequences(X_test_scaled, y_test_scaled, seq_length)"],"metadata":{"id":"JA21PoBHBElK","executionInfo":{"status":"ok","timestamp":1733243136639,"user_tz":-480,"elapsed":5,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["X_train_tensor = torch.tensor(X_train_seq, dtype=torch.float32).to(device)\n","y_train_tensor = torch.tensor(y_train_seq, dtype=torch.float32).to(device)\n","X_test_tensor = torch.tensor(X_test_seq, dtype=torch.float32).to(device)\n","y_test_tensor = torch.tensor(y_test_seq, dtype=torch.float32).to(device)"],"metadata":{"id":"ddeTiKz4B3fS","executionInfo":{"status":"ok","timestamp":1733243138781,"user_tz":-480,"elapsed":4,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["# Define the Improved LSTM Model\n","class ImprovedLSTMModel(nn.Module):\n","    def __init__(self, input_dim, hidden_dim, output_dim, num_layers, dropout=0.2, bidirectional=True):\n","        super(ImprovedLSTMModel, self).__init__()\n","        self.hidden_dim = hidden_dim\n","        self.num_layers = num_layers\n","        self.bidirectional = bidirectional\n","\n","        # LSTM layer with multiple layers, dropout, and bidirectionality\n","        self.lstm = nn.LSTM(\n","            input_dim,\n","            hidden_dim,\n","            num_layers,\n","            batch_first=True,\n","            dropout=dropout,\n","            bidirectional=bidirectional\n","        )\n","\n","        # Fully connected layer (adjust input size for bidirectional LSTM)\n","        self.fc = nn.Linear(hidden_dim * 2 if bidirectional else hidden_dim, output_dim)\n","\n","    def forward(self, x):\n","        # Initialize hidden and cell states for all layers (including forward and backward states if bidirectional)\n","        h0 = torch.zeros(\n","            self.num_layers * 2 if self.bidirectional else self.num_layers,\n","            x.size(0),\n","            self.hidden_dim\n","        ).to(device)\n","\n","        c0 = torch.zeros(\n","            self.num_layers * 2 if self.bidirectional else self.num_layers,\n","            x.size(0),\n","            self.hidden_dim\n","        ).to(device)\n","\n","        # LSTM forward pass\n","        out, _ = self.lstm(x, (h0, c0))\n","\n","        # Fully connected layer on the last time step\n","        out = self.fc(out[:, -1, :])\n","        return out"],"metadata":{"id":"hbHGinmdvbcd","executionInfo":{"status":"ok","timestamp":1733243140411,"user_tz":-480,"elapsed":6,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["# Model parameters\n","input_dim = len(features)  # Number of features\n","hidden_dim = 128           # Increased number of hidden units for more capacity\n","output_dim = 1             # Predicting a single value (HKHI index)\n","num_layers = 3             # Increased depth with 3 LSTM layers\n","dropout = 0.3              # Dropout probability to prevent overfitting\n","bidirectional = True       # Use bidirectional LSTM\n","\n","# Instantiate the improved model\n","model = ImprovedLSTMModel(\n","    input_dim=input_dim,\n","    hidden_dim=hidden_dim,\n","    output_dim=output_dim,\n","    num_layers=num_layers,\n","    dropout=dropout,\n","    bidirectional=bidirectional\n",").to(device)\n","\n","# Define loss function and optimizer\n","criterion = nn.MSELoss()  # Mean Squared Error for regression\n","optimizer = torch.optim.Adam(model.parameters(), lr=0.01)"],"metadata":{"id":"D3L9InVYvdOt","executionInfo":{"status":"ok","timestamp":1733243145400,"user_tz":-480,"elapsed":3546,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["# Train the model\n","num_epochs = 50\n","# Initialize lists to store training and validation losses\n","train_losses = []\n","val_losses = []\n","\n","for epoch in range(num_epochs):\n","    model.train()\n","    optimizer.zero_grad()\n","\n","    # Forward pass on training data\n","    outputs = model(X_train_tensor)\n","    train_loss = criterion(outputs, y_train_tensor)\n","\n","    # Backward pass and optimization\n","    train_loss.backward()\n","    optimizer.step()\n","\n","    # Store training loss\n","    train_losses.append(train_loss.item())\n","\n","    # Evaluate on validation data\n","    model.eval()\n","    with torch.no_grad():\n","        val_outputs = model(X_test_tensor)\n","        val_loss = criterion(val_outputs, y_test_tensor)  # Validation loss\n","        val_losses.append(val_loss.item())\n","\n","    # Print results every 10 epochs\n","    if (epoch + 1) % 10 == 0:\n","        print(f\"Epoch [{epoch + 1}/{num_epochs}], Train Loss: {train_loss.item():.4f}, Validation Loss: {val_loss.item():.4f}\")\n","\n","# Plot training and validation loss\n","plt.plot(train_losses, label=\"Training Loss\")\n","plt.plot(val_losses, label=\"Validation Loss\")\n","plt.xlabel(\"Epochs\")\n","plt.ylabel(\"Loss (Mean Squared Error)\")  # Update loss unit description\n","plt.title(\"Training and Test Loss Curve\")\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":559},"id":"VH0p60-Zexha","executionInfo":{"status":"ok","timestamp":1733245483633,"user_tz":-480,"elapsed":7272,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}},"outputId":"1198cf72-ca83-4df3-c572-e9ed571fc945"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch [10/50], Train Loss: 0.0092, Validation Loss: 0.0074\n","Epoch [20/50], Train Loss: 0.0069, Validation Loss: 0.0064\n","Epoch [30/50], Train Loss: 0.0065, Validation Loss: 0.0059\n","Epoch [40/50], Train Loss: 0.0059, Validation Loss: 0.0052\n","Epoch [50/50], Train Loss: 0.0056, Validation Loss: 0.0054\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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hx9+yMyZM42BQqNGjZgwYQITJkwgKyuLvn37MmfOHCZNmlRuH4YNG0ZMTAw//vijyVRfeTw9PUutkszPz+fixYuWfHVGjRrFF198wcaNGzly5AiKopgESIafDVtbWwYOHGjRtUX9JCNIQpTD8D/1kv8zz8/P5/3336+tLpnQ6XQMHDiQlStXcuHCBePxkydPlspbKe98MP1+iqKYLNW21JAhQygsLOSDDz4wHisqKuLdd9+16DrR0dE4OTnx/vvv8/vvvzNixAgcHBwq7Pv27duJiYmxuM8DBw7E1taWd9991+R6CxcuLNVWp9OVGqlZvnx5qdwTQ20dc8obDBkyhKKiIhYtWmRy/O2330aj0ZidT2YNQ4YMISEhwWSqqbCwkHfffRcXFxfj9GtycrLJeVqt1li8My8vr8w2Li4utGzZ0vh5eR5++GECAgJ46qmnOH78eKnPL126xPz5843vQ0JCTPLVAD766KNyR5DKM3DgQBo1asSyZctYtmwZ3bt3N5mO8/X1pX///nz44YdlBl+XL1+26H6i7pMRJCHKERkZiaenJ+PGjTNug/HVV19d16mMysyZM4d169bRq1cvHnnkEeM/tO3bt690m4vWrVsTEhLC9OnTOX/+PG5ubvz444/VymUZNmwYvXr14rnnnuPMmTO0bduWFStWWJyf4+LiQnR0tDEPqeT0GsDtt9/OihUrGD58OEOHDiU2NpbFixfTtm1bsrKyLLqXoZ7TggULuP322xkyZAh79+7l999/NxkVMtx33rx5TJgwgcjISA4cOMA333xjMvIE6j/aHh4eLF68GFdXV5ydnYmIiCgz/2XYsGEMGDCAF198kTNnztCpUyfWrVvHzz//zBNPPGGSkG0NGzduJDc3t9Tx6OhoHnroIT788EPGjx/P7t27ad68OT/88ANbt25l4cKFxhGuSZMmkZKSws0330yTJk2Ii4vj3XffJSwszJiv1LZtW/r37094eDiNGjVi165d/PDDD0yZMqXC/nl6evLTTz8xZMgQwsLCTCpp79mzh2+//ZaePXsa20+aNImHH36YkSNHcuutt7J//37Wrl1b6veuMra2towYMYLvvvuO7OzsMrdkee+99+jduzcdOnTgwQcfpEWLFiQmJhITE8O5c+dM6mGJG0BtLJ0ToraUt8y/Xbt2ZbbfunWr0qNHD8XR0VEJDAxU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\n"},"metadata":{}}]},{"cell_type":"code","source":["# Evaluate the model\n","model.eval()\n","with torch.no_grad():\n","    y_pred = model(X_test_tensor)\n","    test_loss = criterion(y_pred, y_test_tensor)\n","    print(f\"Test Loss: {test_loss.item():.4f}\")\n"],"metadata":{"id":"n6pi9bpKCQOT","executionInfo":{"status":"ok","timestamp":1733245589706,"user_tz":-480,"elapsed":482,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"a670bd54-ed4a-42b7-9a22-d8336e955bd0"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["Test Loss: 0.0054\n"]}]},{"cell_type":"code","source":["# Inverse transform the test labels\n","y_test_original = scaler_y.inverse_transform(y_test_tensor.cpu().numpy())"],"metadata":{"id":"kAYHcFanxuDL","executionInfo":{"status":"ok","timestamp":1733243162004,"user_tz":-480,"elapsed":5,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["# Inverse transform the predicted values\n","y_pred_original = scaler_y.inverse_transform(y_pred.cpu().numpy())"],"metadata":{"id":"beNPLFhQxvhZ","executionInfo":{"status":"ok","timestamp":1733243164165,"user_tz":-480,"elapsed":1,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["# Extract datetime values for the test data\n","# Assuming `kings_park_data` contains the original dataset with 'Year', 'Month', and 'Day'.\n","test_dates = kings_park_data.iloc[-len(y_test_original):]['Date']\n","\n","\n","# Plot actual vs predicted with datetime on the x-axis\n","plt.figure(figsize=(12, 6))\n","plt.plot(test_dates, y_test_original, label=\"Actual\", color=\"blue\")\n","plt.plot(test_dates, y_pred_original, label=\"Predicted\", color=\"orange\", alpha=0.7)\n","\n","plt.xlabel(\"Date\")\n","plt.ylabel(\"HKHI Index\")\n","plt.title(\"Actual vs Predicted HKHI Index\")\n","plt.legend()\n","plt.xticks(rotation=45)  # Rotate x-axis labels for better readability\n","plt.tight_layout()\n","plt.show()"],"metadata":{"id":"LtgrwXwl4o77","executionInfo":{"status":"ok","timestamp":1733243166598,"user_tz":-480,"elapsed":1455,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}},"colab":{"base_uri":"https://localhost:8080/","height":607},"outputId":"dbc0ee79-ce41-4a26-9cd3-9988b3aa8bb2"},"execution_count":34,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Predict Other regions"],"metadata":{"id":"RHNidflF6nQg"}},{"cell_type":"code","source":["other_regions_data = df[df['WeatherStationName_en'] != \"King's Park\"]"],"metadata":{"id":"4VIUlhhFLCQa","executionInfo":{"status":"ok","timestamp":1733243818600,"user_tz":-480,"elapsed":510,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["other_regions_data = other_regions_data.sort_values(by='Date', ascending=False)\n"],"metadata":{"id":"lvXfcQY9LFb5","executionInfo":{"status":"ok","timestamp":1733243821471,"user_tz":-480,"elapsed":1400,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["latest_7_days_by_region = (\n","    other_regions_data.groupby('WeatherStationName_en')\n","    .head(7)  # Get the top 7 rows for each group (region)\n","    .sort_values(by=['WeatherStationName_en', 'Date'])  # Optional: Re-sort the result by region and date\n",")"],"metadata":{"id":"LdWZsTh2LcUg","executionInfo":{"status":"ok","timestamp":1733243824074,"user_tz":-480,"elapsed":2,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["latest_7_days_by_region"],"metadata":{"id":"cgy7HJKKLdqP","executionInfo":{"status":"ok","timestamp":1733243825559,"user_tz":-480,"elapsed":14,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}},"colab":{"base_uri":"https://localhost:8080/","height":423},"outputId":"061211b3-901d-48f7-867b-a13b7e93eae6"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       WeatherStationName_en  Value_Humidity  Value_Temperature  \\\n","143530           Cheung Chau            51.0               25.2   \n","143544           Cheung Chau            74.0               25.5   \n","143558           Cheung Chau            82.0               26.7   \n","143572           Cheung Chau            76.0               24.7   \n","143586           Cheung Chau            80.0               24.1   \n","...                      ...             ...                ...   \n","143571        Wong Chuk Hang            75.0               27.3   \n","143585        Wong Chuk Hang            68.0               26.1   \n","143599        Wong Chuk Hang            70.0               25.3   \n","143613        Wong Chuk Hang            69.0               25.7   \n","143627        Wong Chuk Hang            53.0               27.3   \n","\n","        Value_Wind_Speed  Value_Wind_Direction Value_Heat_Index        Date  \n","143530              32.2                 350.0              NaN  2024-10-25  \n","143544              31.0                  20.0              NaN  2024-10-26  \n","143558              21.0                  60.0              NaN  2024-10-27  \n","143572              22.5                 360.0              NaN  2024-10-28  \n","143586              14.5                 360.0              NaN  2024-10-29  \n","...                  ...                   ...              ...         ...  \n","143571              10.1                  70.0              NaN  2024-10-27  \n","143585               7.7                  60.0              NaN  2024-10-28  \n","143599               5.4                  60.0              NaN  2024-10-29  \n","143613               4.1                 110.0              NaN  2024-10-30  \n","143627               9.5                 320.0              NaN  2024-10-31  \n","\n","[91 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-8b2a27b2-8cfd-4df9-be3c-5cd8e086ddda\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>WeatherStationName_en</th>\n","      <th>Value_Humidity</th>\n","      <th>Value_Temperature</th>\n","      <th>Value_Wind_Speed</th>\n","      <th>Value_Wind_Direction</th>\n","      <th>Value_Heat_Index</th>\n","      <th>Date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>143530</th>\n","      <td>Cheung Chau</td>\n","      <td>51.0</td>\n","      <td>25.2</td>\n","      <td>32.2</td>\n","      <td>350.0</td>\n","      <td>NaN</td>\n","      <td>2024-10-25</td>\n","    </tr>\n","    <tr>\n","      <th>143544</th>\n","      <td>Cheung Chau</td>\n","      <td>74.0</td>\n","      <td>25.5</td>\n","      <td>31.0</td>\n","      <td>20.0</td>\n","      <td>NaN</td>\n","      <td>2024-10-26</td>\n","    </tr>\n","    <tr>\n","      <th>143558</th>\n","      <td>Cheung Chau</td>\n","      <td>82.0</td>\n","      <td>26.7</td>\n","      <td>21.0</td>\n","      <td>60.0</td>\n","      <td>NaN</td>\n","      <td>2024-10-27</td>\n","    </tr>\n","    <tr>\n","      <th>143572</th>\n","      <td>Cheung Chau</td>\n","      <td>76.0</td>\n","      <td>24.7</td>\n","      <td>22.5</td>\n","      <td>360.0</td>\n","      <td>NaN</td>\n","      <td>2024-10-28</td>\n","    </tr>\n","    <tr>\n","      <th>143586</th>\n","      <td>Cheung Chau</td>\n","      <td>80.0</td>\n","      <td>24.1</td>\n","      <td>14.5</td>\n","      <td>360.0</td>\n","      <td>NaN</td>\n","      <td>2024-10-29</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>143571</th>\n","      <td>Wong Chuk Hang</td>\n","      <td>75.0</td>\n","      <td>27.3</td>\n","      <td>10.1</td>\n","      <td>70.0</td>\n","      <td>NaN</td>\n","      <td>2024-10-27</td>\n","    </tr>\n","    <tr>\n","      <th>143585</th>\n","      <td>Wong Chuk Hang</td>\n","      <td>68.0</td>\n","      <td>26.1</td>\n","      <td>7.7</td>\n","      <td>60.0</td>\n","      <td>NaN</td>\n","      <td>2024-10-28</td>\n","    </tr>\n","    <tr>\n","      <th>143599</th>\n","      <td>Wong Chuk Hang</td>\n","      <td>70.0</td>\n","      <td>25.3</td>\n","      <td>5.4</td>\n","      <td>60.0</td>\n","      <td>NaN</td>\n","      <td>2024-10-29</td>\n","    </tr>\n","    <tr>\n","      <th>143613</th>\n","      <td>Wong Chuk Hang</td>\n","      <td>69.0</td>\n","      <td>25.7</td>\n","      <td>4.1</td>\n","      <td>110.0</td>\n","      <td>NaN</td>\n","      <td>2024-10-30</td>\n","    </tr>\n","    <tr>\n","      <th>143627</th>\n","      <td>Wong Chuk Hang</td>\n","      <td>53.0</td>\n","      <td>27.3</td>\n","      <td>9.5</td>\n","      <td>320.0</td>\n","      <td>NaN</td>\n","      <td>2024-10-31</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>91 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b2a27b2-8cfd-4df9-be3c-5cd8e086ddda')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8b2a27b2-8cfd-4df9-be3c-5cd8e086ddda button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8b2a27b2-8cfd-4df9-be3c-5cd8e086ddda');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8e859175-bc79-46f2-9a2e-a8006b17e70e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8e859175-bc79-46f2-9a2e-a8006b17e70e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8e859175-bc79-46f2-9a2e-a8006b17e70e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"latest_7_days_by_region","repr_error":"0"}},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["# Initialize an empty list to store predictions\n","predictions = []\n","\n","# Group by region\n","for region, group in latest_7_days_by_region.groupby('WeatherStationName_en'):\n","    # Select features and scale\n","    X_latest = group[features].values\n","    X_latest_scaled = scaler_X.transform(X_latest)\n","\n","    # Prepare the input sequence\n","    X_latest_sequence = X_latest_scaled.reshape(1, seq_length, len(features))  # Shape: (1, 7, num_features)\n","    X_latest_tensor = torch.tensor(X_latest_sequence, dtype=torch.float32).to(device)\n","\n","    # Predict the next day's HKHI index\n","    model.eval()\n","    with torch.no_grad():\n","        next_day_prediction = model(X_latest_tensor)\n","\n","    # Inverse transform the prediction\n","    next_day_prediction_original_scale = scaler_y.inverse_transform(next_day_prediction.cpu().numpy())\n","\n","    # Get the latest date in this region's data\n","    latest_date = group['Date'].max()\n","\n","    # Calculate the prediction date (next day)\n","    predicted_date = pd.to_datetime(latest_date) + pd.Timedelta(days=1)\n","\n","    # Save the prediction, region, and predicted date\n","    predictions.append({\n","        'Region': region,\n","        'Predicted_Date': predicted_date.strftime('%Y-%m-%d'),\n","        'Predicted_HKHI_Index': next_day_prediction_original_scale[0][0]\n","    })"],"metadata":{"id":"kBlxY3i352xo","executionInfo":{"status":"ok","timestamp":1733243834485,"user_tz":-480,"elapsed":570,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["# Filter the latest King's Park data\n","kings_park_latest = df.query(\"WeatherStationName_en == 'King\\\\'s Park'\") \\\n","                      .sort_values(by='Date', ascending=False).head(1)\n","\n","# Prepare the King's Park prediction as a DataFrame\n","kings_park_prediction_df = pd.DataFrame([{\n","    'Region': \"King's Park\",\n","    'Predicted_Date': predictions[-1]['Predicted_Date'],  # Use the predicted date\n","    'HKHI_Index': predictions[-1]['Predicted_HKHI_Index']  # Use the predicted HKHI index\n","}])\n","\n","# Rename columns in the predictions DataFrame to match the desired output format\n","predictions_df = predictions_df.rename(columns={\n","    'Predicted_HKHI_Index': 'HKHI_Index'\n","})\n","\n","# Concatenate the predictions DataFrame with King's Park prediction\n","final_df = pd.concat([predictions_df, kings_park_prediction_df], ignore_index=True)\n","\n","# Select only the relevant columns\n","final_df = final_df[['Region', 'Predicted_Date', 'HKHI_Index']]\n","\n","final_df.head(20)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"Ns8LEDSHgc8c","executionInfo":{"status":"ok","timestamp":1733245936498,"user_tz":-480,"elapsed":513,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}},"outputId":"326799bb-8fed-4fe8-ff67-ca4d14d8df80"},"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                             Region Predicted_Date  HKHI_Index\n","0                       Cheung Chau     2024-11-01   29.348841\n","1   Hong Kong International Airport     2024-11-01   23.669291\n","2                      Lau Fau Shan     2024-11-01   26.865053\n","3                         Peng Chau     2024-11-01   29.057558\n","4                          Sai Kung     2024-11-01   23.568445\n","5                           Sha Tin     2024-11-01   24.343630\n","6                         Shek Kong     2024-11-01   22.991364\n","7                       Ta Kwu Ling     2024-11-01   22.846611\n","8                     Tseung Kwan O     2024-11-01   24.261101\n","9                          Tuen Mun     2024-11-01   23.204565\n","10                    Waglan Island     2024-11-01   28.191505\n","11                     Wetland Park     2024-11-01   25.602543\n","12                   Wong Chuk Hang     2024-11-01   24.389389\n","13                      King's Park     2024-11-01   24.389389"],"text/html":["\n","  <div id=\"df-eb88e01d-6549-40b3-97d5-43f80d80e4a7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Region</th>\n","      <th>Predicted_Date</th>\n","      <th>HKHI_Index</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Cheung Chau</td>\n","      <td>2024-11-01</td>\n","      <td>29.348841</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Hong Kong International Airport</td>\n","      <td>2024-11-01</td>\n","      <td>23.669291</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Lau Fau Shan</td>\n","      <td>2024-11-01</td>\n","      <td>26.865053</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Peng Chau</td>\n","      <td>2024-11-01</td>\n","      <td>29.057558</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Sai Kung</td>\n","      <td>2024-11-01</td>\n","      <td>23.568445</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Sha Tin</td>\n","      <td>2024-11-01</td>\n","      <td>24.343630</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Shek Kong</td>\n","      <td>2024-11-01</td>\n","      <td>22.991364</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Ta Kwu Ling</td>\n","      <td>2024-11-01</td>\n","      <td>22.846611</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Tseung Kwan O</td>\n","      <td>2024-11-01</td>\n","      <td>24.261101</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Tuen Mun</td>\n","      <td>2024-11-01</td>\n","      <td>23.204565</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Waglan Island</td>\n","      <td>2024-11-01</td>\n","      <td>28.191505</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Wetland Park</td>\n","      <td>2024-11-01</td>\n","      <td>25.602543</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Wong Chuk Hang</td>\n","      <td>2024-11-01</td>\n","      <td>24.389389</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>King's Park</td>\n","      <td>2024-11-01</td>\n","      <td>24.389389</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eb88e01d-6549-40b3-97d5-43f80d80e4a7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-eb88e01d-6549-40b3-97d5-43f80d80e4a7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-eb88e01d-6549-40b3-97d5-43f80d80e4a7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-876624ae-2f7c-46db-ae80-e422923002a7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-876624ae-2f7c-46db-ae80-e422923002a7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-876624ae-2f7c-46db-ae80-e422923002a7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"final_df","summary":"{\n  \"name\": \"final_df\",\n  \"rows\": 14,\n  \"fields\": [\n    {\n      \"column\": \"Region\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Tuen Mun\",\n          \"Wetland Park\",\n          \"Cheung Chau\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Predicted_Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2024-11-01\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HKHI_Index\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          25.602542877197266\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["final_df.to_csv('FACT_FINAL.csv', index=False)"],"metadata":{"id":"qyT-_CCVgkVp","executionInfo":{"status":"ok","timestamp":1733245958439,"user_tz":-480,"elapsed":995,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":64,"outputs":[]},{"cell_type":"code","source":["# Save the trained model\n","torch.save(model.state_dict(), \"lstm_model.pth\")\n","\n","# Load the model\n","model.load_state_dict(torch.load(\"lstm_model.pth\"))\n","model.eval()"],"metadata":{"id":"6an0fND3B2qW","executionInfo":{"status":"ok","timestamp":1733243838535,"user_tz":-480,"elapsed":16,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"fd4184c9-5156-4151-8e55-7ab4ba802c0c"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-41-7320b04e4a18>:5: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n","  model.load_state_dict(torch.load(\"lstm_model.pth\"))\n"]},{"output_type":"execute_result","data":{"text/plain":["ImprovedLSTMModel(\n","  (lstm): LSTM(4, 128, num_layers=3, batch_first=True, dropout=0.3, bidirectional=True)\n","  (fc): Linear(in_features=256, out_features=1, bias=True)\n",")"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":[],"metadata":{"id":"Lnx7rvQxTPUl","executionInfo":{"status":"aborted","timestamp":1733243075696,"user_tz":-480,"elapsed":17,"user":{"displayName":"Kelvin HO","userId":"14733841669538695432"}}},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"GPU","colab":{"gpuType":"T4","provenance":[],"machine_shape":"hm"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}